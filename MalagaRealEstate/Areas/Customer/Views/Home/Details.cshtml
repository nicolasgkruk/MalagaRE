@model MalagaRealEstate.Models.Properties

@{
    ViewData["Title"] = "Detalles de la propiedad";
    var finalPrice = Model.OwnerPrice * 1.03;
    if (Model.Garaje == true)
    {
        finalPrice += 5000;
    };

}

<h1>@Model.Header</h1>

<hr />
<div class="container">
    <div class="row">

        <div class="col-md-6">

            <h5>Precio</h5>
            <p>@String.Format("{0:C0}", finalPrice)</p>

            <div class="form-group">
                <h5>Descripción</h5>
                <p>@Html.Raw(Model.Description)</p>
            </div>

            <div class="row">
                <div class="col-6">
                    <h5>Habitaciones</h5>
                    <p>@Model.Rooms</p>
                </div>
                <div class="col-6">
                    <h5>Baños</h5>
                    <p>@Model.Bathrooms</p>
                </div>
            </div>

            <div class="row">

                @{ if (Model.FloorNumber == null)
                    {
                        <div class="col-6">
                            <h5>Número de piso</h5>
                            <p>No aplica</p>
                        </div>
                    }
                    else
                    { <div class="col-6">
                            <h5>Número de piso</h5>
                            <p>@Model.FloorNumber</p>
                        </div> }
                }
                <div class="col-6">
                    <h5>Metros cuadrados</h5>
                    <p>@Model.SquareMeters</p>
                </div>
            </div>

            <div class="row">
                <div class="col-6">

                    <h5>Tipo</h5>
                    @{if (Model.PropType == "piso")
                        {
                            <p>Piso</p>
                        }
                        else if (Model.PropType == "casaOChalet")
                        {
                            <p>Casa O Chalet</p>
                        }
                        else if (Model.PropType == "casaRustica")
                        {
                            <p>Casa Rústica</p>
                        }
                        else if (Model.PropType == "duplex")
                        {
                            <p>Duplex</p>
                        }
                        else if (Model.PropType == "atico")
                        {
                            <p>Ático</p>
                        }

                    }
                </div>
                <div class="col-6">
                    <h5>Estado</h5>
                    @{if (Model.PropState == "nueva")
                        {
                            <p>Nueva</p>
                        }
                        else if (Model.PropState == "bienMantenida")
                        {
                            <p>Bien Mantenida</p>
                        }
                        else if (Model.PropState == "aReciclar")
                        {
                            <p>A reciclar</p>
                        }
                    }
                </div>
                
            </div>
           
            <hr />
            @{
                if (Model.Garaje)
                {
                    <p>✓ @Html.DisplayNameFor(model => model.Garaje)</p>
                }

                if (Model.AirConditioning)
                {
                    <p>✓ @Html.DisplayNameFor(model => model.AirConditioning)</p>
                }

                if (Model.Elevator)
                {
                    <p>✓ @Html.DisplayNameFor(model => model.Elevator)</p>
                }

                if (Model.Exterior)
                {
                    <p>✓ @Html.DisplayNameFor(model => model.Exterior)</p>
                }

                if (Model.Garden)
                {
                    <p>✓ @Html.DisplayNameFor(model => model.Garden)</p>
                }

                if (Model.SwimmingPool)
                {
                    <p>✓ @Html.DisplayNameFor(model => model.SwimmingPool)</p>
                }

                if (Model.Terrace)
                {
                    <p>✓ @Html.DisplayNameFor(model => model.Terrace)</p>
                }

                if (Model.StorageRoom)
                {
                    <p>✓ @Html.DisplayNameFor(model => model.StorageRoom)</p>
                }
            }
                    <hr />
            <h5>Última fecha de actualización</h5>
            <p>@Model.Updated.ToString().Substring(0, 10)</p>
        </div>

        <div class="col-md-6">
            <div>
                @{
                    if (Model.Image != null)
                    {

                        <div id="imagenActual">
                            <img src="@Model.Image" width="100%" style="border-radius:5px;border: 1px solid #bbb9b9;" />
                        </div>
                    }
                }
            </div>
            <hr />

            <div id="container-map" style="display:none;">
                <h3>Zona aproximada</h3>
                <br />
                <div id="map">

                </div>
            </div>
        </div>
    </div>

</div>

<div class="text-center">
    <a asp-action="Index" class="btn btn-info">Volver al listado</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/marcador.js"></script>
    <script src="~/js/details.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3&key=&libraries=places&callback=inicializarMapa"></script>

    @{if (Model.Address != null)
        {
<script>
        $("#container-map").show();
        var myLatLng = {
            lat: @Model.Latitude.ToString().Replace(",", "."),
            lng: @Model.Longitude.ToString().Replace(",", ".") };
        marcadorModulo.mostrarMarcadorCliente(myLatLng);
</script>
} }


    <script>
        $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
    </script>
}